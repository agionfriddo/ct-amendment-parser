name: Deploy to AWS Lambda

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allow manual trigger

env:
  AWS_REGION: us-east-1
  LAMBDA_FUNCTION_NAME: amendmentCron

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

  deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci --production

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Create deployment package
      run: |
        # Remove dev dependencies and test files from deployment
        rm -rf __tests__
        rm -f jest.config.js
        
        # Create deployment zip
        zip -r lambda-deployment.zip . -x "*.git*" "node_modules/.cache/*" ".github/*"

    - name: Deploy to Lambda
      run: |
        aws lambda update-function-code \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --zip-file fileb://lambda-deployment.zip

    - name: Update function configuration
      run: |
        aws lambda update-function-configuration \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --environment Variables="{TO_EMAILS=${{ secrets.TO_EMAILS }},FROM_EMAIL=${{ secrets.FROM_EMAIL }}}" \
          --timeout 300 \
          --memory-size 512

    - name: Publish new version
      run: |
        aws lambda publish-version \
          --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
          --description "Deployed from GitHub Actions - $(date '+%Y-%m-%d %H:%M:%S')"